### YamlMime:ManagedReference
items:
- uid: Genesis.Math.Vec3
  commentId: T:Genesis.Math.Vec3
  id: Vec3
  parent: Genesis.Math
  children:
  - Genesis.Math.Vec3.#ctor(GlmSharp.vec3)
  - Genesis.Math.Vec3.#ctor(System.Drawing.Point)
  - Genesis.Math.Vec3.#ctor(System.Drawing.PointF)
  - Genesis.Math.Vec3.#ctor(System.Drawing.Size)
  - Genesis.Math.Vec3.#ctor(System.Drawing.SizeF)
  - Genesis.Math.Vec3.#ctor(System.Single)
  - Genesis.Math.Vec3.#ctor(System.Single,System.Single)
  - Genesis.Math.Vec3.#ctor(System.Single,System.Single,System.Single)
  - Genesis.Math.Vec3.Add(Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Add(System.Single,System.Single)
  - Genesis.Math.Vec3.Add(System.Single,System.Single,System.Single)
  - Genesis.Math.Vec3.AddX(System.Single)
  - Genesis.Math.Vec3.AddY(System.Single)
  - Genesis.Math.Vec3.AddZ(System.Single)
  - Genesis.Math.Vec3.Ceiling(Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Cross(Genesis.Math.Vec3,Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Degres(Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Degres(System.Single,System.Single)
  - Genesis.Math.Vec3.Distance(Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Dot(Genesis.Math.Vec3,Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Floor(Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Forward(Genesis.Math.Vec3,System.Single)
  - Genesis.Math.Vec3.Half
  - Genesis.Math.Vec3.Half(Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Normalize
  - Genesis.Math.Vec3.Normalized(Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Random(Genesis.Math.Vec3,Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Random(Genesis.Math.Vec3,Genesis.Math.Vec3,System.Int32)
  - Genesis.Math.Vec3.Round(Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Set(Genesis.Math.Vec3)
  - Genesis.Math.Vec3.Set(System.Single,System.Single,System.Single)
  - Genesis.Math.Vec3.Sub(Genesis.Math.Vec3)
  - Genesis.Math.Vec3.ToBulletVec3
  - Genesis.Math.Vec3.ToGlmVec3
  - Genesis.Math.Vec3.ToString
  - Genesis.Math.Vec3.Towards(System.Single,System.Single)
  - Genesis.Math.Vec3.Towards2D(System.Single,Genesis.Math.Vec3,System.Single)
  - Genesis.Math.Vec3.Towards3D(Genesis.Math.Vec3,Genesis.Math.Vec3,System.Single)
  - Genesis.Math.Vec3.Towards3D(System.Single,System.Single,System.Single,Genesis.Math.Vec3,System.Single)
  - Genesis.Math.Vec3.X
  - Genesis.Math.Vec3.Y
  - Genesis.Math.Vec3.Z
  - Genesis.Math.Vec3.Zero
  - Genesis.Math.Vec3.op_Addition(Genesis.Math.Vec3,Genesis.Math.Vec3)
  - Genesis.Math.Vec3.op_Division(Genesis.Math.Vec3,Genesis.Math.Vec3)
  - Genesis.Math.Vec3.op_Multiply(Genesis.Math.Vec3,Genesis.Math.Vec3)
  - Genesis.Math.Vec3.op_Multiply(Genesis.Math.Vec3,System.Single)
  - Genesis.Math.Vec3.op_Subtraction(Genesis.Math.Vec3,Genesis.Math.Vec3)
  langs:
  - csharp
  - vb
  name: Vec3
  nameWithType: Vec3
  fullName: Genesis.Math.Vec3
  type: Class
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Represents a 3D vector for coordinates.
  example: []
  syntax:
    content: public class Vec3
    content.vb: Public Class Vec3
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Genesis.Math.Vec3.#ctor(System.Single,System.Single,System.Single)
  commentId: M:Genesis.Math.Vec3.#ctor(System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single)'
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Vec3(float, float, float)
  nameWithType: Vec3.Vec3(float, float, float)
  fullName: Genesis.Math.Vec3.Vec3(float, float, float)
  type: Constructor
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Creates a new 3D vector with specified coordinates.
  example: []
  syntax:
    content: public Vec3(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
      description: The X-coordinate of the vector.
    - id: y
      type: System.Single
      description: The Y-coordinate of the vector.
    - id: z
      type: System.Single
      description: The Z-coordinate of the vector.
    content.vb: Public Sub New(x As Single, y As Single, z As Single)
  overload: Genesis.Math.Vec3.#ctor*
  nameWithType.vb: Vec3.New(Single, Single, Single)
  fullName.vb: Genesis.Math.Vec3.New(Single, Single, Single)
  name.vb: New(Single, Single, Single)
- uid: Genesis.Math.Vec3.#ctor(System.Single,System.Single)
  commentId: M:Genesis.Math.Vec3.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Vec3(float, float)
  nameWithType: Vec3.Vec3(float, float)
  fullName: Genesis.Math.Vec3.Vec3(float, float)
  type: Constructor
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Creates a new Vector
  example: []
  syntax:
    content: public Vec3(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: ''
    - id: y
      type: System.Single
      description: ''
    content.vb: Public Sub New(x As Single, y As Single)
  overload: Genesis.Math.Vec3.#ctor*
  nameWithType.vb: Vec3.New(Single, Single)
  fullName.vb: Genesis.Math.Vec3.New(Single, Single)
  name.vb: New(Single, Single)
- uid: Genesis.Math.Vec3.#ctor(System.Single)
  commentId: M:Genesis.Math.Vec3.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Vec3(float)
  nameWithType: Vec3.Vec3(float)
  fullName: Genesis.Math.Vec3.Vec3(float)
  type: Constructor
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Creates a new Vector
  example: []
  syntax:
    content: public Vec3(float value)
    parameters:
    - id: value
      type: System.Single
      description: ''
    content.vb: Public Sub New(value As Single)
  overload: Genesis.Math.Vec3.#ctor*
  nameWithType.vb: Vec3.New(Single)
  fullName.vb: Genesis.Math.Vec3.New(Single)
  name.vb: New(Single)
- uid: Genesis.Math.Vec3.#ctor(System.Drawing.Size)
  commentId: M:Genesis.Math.Vec3.#ctor(System.Drawing.Size)
  id: '#ctor(System.Drawing.Size)'
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Vec3(Size)
  nameWithType: Vec3.Vec3(Size)
  fullName: Genesis.Math.Vec3.Vec3(System.Drawing.Size)
  type: Constructor
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Creates a new 3D vector with specified coordinates from a Size object.
  example: []
  syntax:
    content: public Vec3(Size size)
    parameters:
    - id: size
      type: System.Drawing.Size
      description: The Size object to extract coordinates from.
    content.vb: Public Sub New(size As Size)
  overload: Genesis.Math.Vec3.#ctor*
  nameWithType.vb: Vec3.New(Size)
  fullName.vb: Genesis.Math.Vec3.New(System.Drawing.Size)
  name.vb: New(Size)
- uid: Genesis.Math.Vec3.#ctor(System.Drawing.SizeF)
  commentId: M:Genesis.Math.Vec3.#ctor(System.Drawing.SizeF)
  id: '#ctor(System.Drawing.SizeF)'
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Vec3(SizeF)
  nameWithType: Vec3.Vec3(SizeF)
  fullName: Genesis.Math.Vec3.Vec3(System.Drawing.SizeF)
  type: Constructor
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Creates a new 3D vector with specified coordinates from a SizeF object.
  example: []
  syntax:
    content: public Vec3(SizeF size)
    parameters:
    - id: size
      type: System.Drawing.SizeF
      description: The SizeF object to extract coordinates from.
    content.vb: Public Sub New(size As SizeF)
  overload: Genesis.Math.Vec3.#ctor*
  nameWithType.vb: Vec3.New(SizeF)
  fullName.vb: Genesis.Math.Vec3.New(System.Drawing.SizeF)
  name.vb: New(SizeF)
- uid: Genesis.Math.Vec3.#ctor(System.Drawing.Point)
  commentId: M:Genesis.Math.Vec3.#ctor(System.Drawing.Point)
  id: '#ctor(System.Drawing.Point)'
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Vec3(Point)
  nameWithType: Vec3.Vec3(Point)
  fullName: Genesis.Math.Vec3.Vec3(System.Drawing.Point)
  type: Constructor
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Creates a new 3D vector with specified coordinates from a Point object.
  example: []
  syntax:
    content: public Vec3(Point point)
    parameters:
    - id: point
      type: System.Drawing.Point
    content.vb: Public Sub New(point As Point)
  overload: Genesis.Math.Vec3.#ctor*
  nameWithType.vb: Vec3.New(Point)
  fullName.vb: Genesis.Math.Vec3.New(System.Drawing.Point)
  name.vb: New(Point)
- uid: Genesis.Math.Vec3.#ctor(System.Drawing.PointF)
  commentId: M:Genesis.Math.Vec3.#ctor(System.Drawing.PointF)
  id: '#ctor(System.Drawing.PointF)'
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Vec3(PointF)
  nameWithType: Vec3.Vec3(PointF)
  fullName: Genesis.Math.Vec3.Vec3(System.Drawing.PointF)
  type: Constructor
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Creates a new 3D vector with specified coordinates from a PointF object.
  example: []
  syntax:
    content: public Vec3(PointF point)
    parameters:
    - id: point
      type: System.Drawing.PointF
    content.vb: Public Sub New(point As PointF)
  overload: Genesis.Math.Vec3.#ctor*
  nameWithType.vb: Vec3.New(PointF)
  fullName.vb: Genesis.Math.Vec3.New(System.Drawing.PointF)
  name.vb: New(PointF)
- uid: Genesis.Math.Vec3.#ctor(GlmSharp.vec3)
  commentId: M:Genesis.Math.Vec3.#ctor(GlmSharp.vec3)
  id: '#ctor(GlmSharp.vec3)'
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Vec3(vec3)
  nameWithType: Vec3.Vec3(vec3)
  fullName: Genesis.Math.Vec3.Vec3(GlmSharp.vec3)
  type: Constructor
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Creates a new 3D vector with specified coordinates from a glm vec3 object.
  example: []
  syntax:
    content: public Vec3(vec3 vec3)
    parameters:
    - id: vec3
      type: GlmSharp.vec3
    content.vb: Public Sub New(vec3 As vec3)
  overload: Genesis.Math.Vec3.#ctor*
  nameWithType.vb: Vec3.New(vec3)
  fullName.vb: Genesis.Math.Vec3.New(GlmSharp.vec3)
  name.vb: New(vec3)
- uid: Genesis.Math.Vec3.Zero
  commentId: M:Genesis.Math.Vec3.Zero
  id: Zero
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Zero()
  nameWithType: Vec3.Zero()
  fullName: Genesis.Math.Vec3.Zero()
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns a new 3D vector with X = 0, Y = 0, Z = 0.
  example: []
  syntax:
    content: public static Vec3 Zero()
    return:
      type: Genesis.Math.Vec3
      description: A Vec3 instance representing the zero vector.
    content.vb: Public Shared Function Zero() As Vec3
  overload: Genesis.Math.Vec3.Zero*
- uid: Genesis.Math.Vec3.Degres(System.Single,System.Single)
  commentId: M:Genesis.Math.Vec3.Degres(System.Single,System.Single)
  id: Degres(System.Single,System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Degres(float, float)
  nameWithType: Vec3.Degres(float, float)
  fullName: Genesis.Math.Vec3.Degres(float, float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns the offset angle to the vector.
  example: []
  syntax:
    content: public float Degres(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: The X-coordinate of the vector.
    - id: y
      type: System.Single
      description: The Y-coordinate of the vector.
    return:
      type: System.Single
      description: The offset angle to the vector in degrees.
    content.vb: Public Function Degres(x As Single, y As Single) As Single
  overload: Genesis.Math.Vec3.Degres*
  nameWithType.vb: Vec3.Degres(Single, Single)
  fullName.vb: Genesis.Math.Vec3.Degres(Single, Single)
  name.vb: Degres(Single, Single)
- uid: Genesis.Math.Vec3.Degres(Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Degres(Genesis.Math.Vec3)
  id: Degres(Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Degres(Vec3)
  nameWithType: Vec3.Degres(Vec3)
  fullName: Genesis.Math.Vec3.Degres(Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns the offset angle to the vector.
  example: []
  syntax:
    content: public float Degres(Vec3 vec3)
    parameters:
    - id: vec3
      type: Genesis.Math.Vec3
      description: The reference vector.
    return:
      type: System.Single
      description: The offset angle to the vector in degrees.
    content.vb: Public Function Degres(vec3 As Vec3) As Single
  overload: Genesis.Math.Vec3.Degres*
- uid: Genesis.Math.Vec3.Towards(System.Single,System.Single)
  commentId: M:Genesis.Math.Vec3.Towards(System.Single,System.Single)
  id: Towards(System.Single,System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Towards(float, float)
  nameWithType: Vec3.Towards(float, float)
  fullName: Genesis.Math.Vec3.Towards(float, float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Calculates the vector towards in 3D.
  example: []
  syntax:
    content: public Vec3 Towards(float degrees, float dist)
    parameters:
    - id: degrees
      type: System.Single
    - id: dist
      type: System.Single
      description: The distance.
    return:
      type: Genesis.Math.Vec3
      description: A new Vec3 instance representing the vector towards in 3D.
    content.vb: Public Function Towards(degrees As Single, dist As Single) As Vec3
  overload: Genesis.Math.Vec3.Towards*
  nameWithType.vb: Vec3.Towards(Single, Single)
  fullName.vb: Genesis.Math.Vec3.Towards(Single, Single)
  name.vb: Towards(Single, Single)
- uid: Genesis.Math.Vec3.Towards2D(System.Single,Genesis.Math.Vec3,System.Single)
  commentId: M:Genesis.Math.Vec3.Towards2D(System.Single,Genesis.Math.Vec3,System.Single)
  id: Towards2D(System.Single,Genesis.Math.Vec3,System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Towards2D(float, Vec3, float)
  nameWithType: Vec3.Towards2D(float, Vec3, float)
  fullName: Genesis.Math.Vec3.Towards2D(float, Genesis.Math.Vec3, float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns a new vector towards the given direction.
  example: []
  syntax:
    content: public static Vec3 Towards2D(float degrees, Vec3 start, float dist)
    parameters:
    - id: degrees
      type: System.Single
      description: ''
    - id: start
      type: Genesis.Math.Vec3
      description: ''
    - id: dist
      type: System.Single
      description: ''
    return:
      type: Genesis.Math.Vec3
      description: ''
    content.vb: Public Shared Function Towards2D(degrees As Single, start As Vec3, dist As Single) As Vec3
  overload: Genesis.Math.Vec3.Towards2D*
  nameWithType.vb: Vec3.Towards2D(Single, Vec3, Single)
  fullName.vb: Genesis.Math.Vec3.Towards2D(Single, Genesis.Math.Vec3, Single)
  name.vb: Towards2D(Single, Vec3, Single)
- uid: Genesis.Math.Vec3.Towards3D(Genesis.Math.Vec3,Genesis.Math.Vec3,System.Single)
  commentId: M:Genesis.Math.Vec3.Towards3D(Genesis.Math.Vec3,Genesis.Math.Vec3,System.Single)
  id: Towards3D(Genesis.Math.Vec3,Genesis.Math.Vec3,System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Towards3D(Vec3, Vec3, float)
  nameWithType: Vec3.Towards3D(Vec3, Vec3, float)
  fullName: Genesis.Math.Vec3.Towards3D(Genesis.Math.Vec3, Genesis.Math.Vec3, float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Calculates the Vector towards in 3D
  example: []
  syntax:
    content: public static Vec3 Towards3D(Vec3 rotation, Vec3 start, float dist)
    parameters:
    - id: rotation
      type: Genesis.Math.Vec3
      description: ''
    - id: start
      type: Genesis.Math.Vec3
      description: ''
    - id: dist
      type: System.Single
      description: ''
    return:
      type: Genesis.Math.Vec3
      description: ''
    content.vb: Public Shared Function Towards3D(rotation As Vec3, start As Vec3, dist As Single) As Vec3
  overload: Genesis.Math.Vec3.Towards3D*
  nameWithType.vb: Vec3.Towards3D(Vec3, Vec3, Single)
  fullName.vb: Genesis.Math.Vec3.Towards3D(Genesis.Math.Vec3, Genesis.Math.Vec3, Single)
  name.vb: Towards3D(Vec3, Vec3, Single)
- uid: Genesis.Math.Vec3.Towards3D(System.Single,System.Single,System.Single,Genesis.Math.Vec3,System.Single)
  commentId: M:Genesis.Math.Vec3.Towards3D(System.Single,System.Single,System.Single,Genesis.Math.Vec3,System.Single)
  id: Towards3D(System.Single,System.Single,System.Single,Genesis.Math.Vec3,System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Towards3D(float, float, float, Vec3, float)
  nameWithType: Vec3.Towards3D(float, float, float, Vec3, float)
  fullName: Genesis.Math.Vec3.Towards3D(float, float, float, Genesis.Math.Vec3, float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Calculates the towards vector
  example: []
  syntax:
    content: public static Vec3 Towards3D(float rotX, float rotY, float rotZ, Vec3 start, float dist)
    parameters:
    - id: rotX
      type: System.Single
      description: ''
    - id: rotY
      type: System.Single
      description: ''
    - id: rotZ
      type: System.Single
      description: ''
    - id: start
      type: Genesis.Math.Vec3
      description: ''
    - id: dist
      type: System.Single
      description: ''
    return:
      type: Genesis.Math.Vec3
      description: ''
    content.vb: Public Shared Function Towards3D(rotX As Single, rotY As Single, rotZ As Single, start As Vec3, dist As Single) As Vec3
  overload: Genesis.Math.Vec3.Towards3D*
  nameWithType.vb: Vec3.Towards3D(Single, Single, Single, Vec3, Single)
  fullName.vb: Genesis.Math.Vec3.Towards3D(Single, Single, Single, Genesis.Math.Vec3, Single)
  name.vb: Towards3D(Single, Single, Single, Vec3, Single)
- uid: Genesis.Math.Vec3.Distance(Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Distance(Genesis.Math.Vec3)
  id: Distance(Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Distance(Vec3)
  nameWithType: Vec3.Distance(Vec3)
  fullName: Genesis.Math.Vec3.Distance(Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns the distance between two vectors
  example: []
  syntax:
    content: public float Distance(Vec3 vec3)
    parameters:
    - id: vec3
      type: Genesis.Math.Vec3
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function Distance(vec3 As Vec3) As Single
  overload: Genesis.Math.Vec3.Distance*
- uid: Genesis.Math.Vec3.Add(Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Add(Genesis.Math.Vec3)
  id: Add(Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Add(Vec3)
  nameWithType: Vec3.Add(Vec3)
  fullName: Genesis.Math.Vec3.Add(Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Adds the value from a vector
  example: []
  syntax:
    content: public void Add(Vec3 vec)
    parameters:
    - id: vec
      type: Genesis.Math.Vec3
      description: ''
    content.vb: Public Sub Add(vec As Vec3)
  overload: Genesis.Math.Vec3.Add*
- uid: Genesis.Math.Vec3.Add(System.Single,System.Single)
  commentId: M:Genesis.Math.Vec3.Add(System.Single,System.Single)
  id: Add(System.Single,System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Add(float, float)
  nameWithType: Vec3.Add(float, float)
  fullName: Genesis.Math.Vec3.Add(float, float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Adds the values to the vector
  example: []
  syntax:
    content: public void Add(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: ''
    - id: y
      type: System.Single
      description: ''
    content.vb: Public Sub Add(x As Single, y As Single)
  overload: Genesis.Math.Vec3.Add*
  nameWithType.vb: Vec3.Add(Single, Single)
  fullName.vb: Genesis.Math.Vec3.Add(Single, Single)
  name.vb: Add(Single, Single)
- uid: Genesis.Math.Vec3.Add(System.Single,System.Single,System.Single)
  commentId: M:Genesis.Math.Vec3.Add(System.Single,System.Single,System.Single)
  id: Add(System.Single,System.Single,System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Add(float, float, float)
  nameWithType: Vec3.Add(float, float, float)
  fullName: Genesis.Math.Vec3.Add(float, float, float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Adds the values to the vector
  example: []
  syntax:
    content: public void Add(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
      description: ''
    - id: y
      type: System.Single
      description: ''
    - id: z
      type: System.Single
      description: ''
    content.vb: Public Sub Add(x As Single, y As Single, z As Single)
  overload: Genesis.Math.Vec3.Add*
  nameWithType.vb: Vec3.Add(Single, Single, Single)
  fullName.vb: Genesis.Math.Vec3.Add(Single, Single, Single)
  name.vb: Add(Single, Single, Single)
- uid: Genesis.Math.Vec3.AddX(System.Single)
  commentId: M:Genesis.Math.Vec3.AddX(System.Single)
  id: AddX(System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: AddX(float)
  nameWithType: Vec3.AddX(float)
  fullName: Genesis.Math.Vec3.AddX(float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Add the value to the X param
  example: []
  syntax:
    content: public void AddX(float x)
    parameters:
    - id: x
      type: System.Single
      description: ''
    content.vb: Public Sub AddX(x As Single)
  overload: Genesis.Math.Vec3.AddX*
  nameWithType.vb: Vec3.AddX(Single)
  fullName.vb: Genesis.Math.Vec3.AddX(Single)
  name.vb: AddX(Single)
- uid: Genesis.Math.Vec3.AddY(System.Single)
  commentId: M:Genesis.Math.Vec3.AddY(System.Single)
  id: AddY(System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: AddY(float)
  nameWithType: Vec3.AddY(float)
  fullName: Genesis.Math.Vec3.AddY(float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Add the value to the y param
  example: []
  syntax:
    content: public void AddY(float y)
    parameters:
    - id: y
      type: System.Single
      description: ''
    content.vb: Public Sub AddY(y As Single)
  overload: Genesis.Math.Vec3.AddY*
  nameWithType.vb: Vec3.AddY(Single)
  fullName.vb: Genesis.Math.Vec3.AddY(Single)
  name.vb: AddY(Single)
- uid: Genesis.Math.Vec3.AddZ(System.Single)
  commentId: M:Genesis.Math.Vec3.AddZ(System.Single)
  id: AddZ(System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: AddZ(float)
  nameWithType: Vec3.AddZ(float)
  fullName: Genesis.Math.Vec3.AddZ(float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Add the value to the z param
  example: []
  syntax:
    content: public void AddZ(float z)
    parameters:
    - id: z
      type: System.Single
      description: ''
    content.vb: Public Sub AddZ(z As Single)
  overload: Genesis.Math.Vec3.AddZ*
  nameWithType.vb: Vec3.AddZ(Single)
  fullName.vb: Genesis.Math.Vec3.AddZ(Single)
  name.vb: AddZ(Single)
- uid: Genesis.Math.Vec3.Sub(Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Sub(Genesis.Math.Vec3)
  id: Sub(Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Sub(Vec3)
  nameWithType: Vec3.Sub(Vec3)
  fullName: Genesis.Math.Vec3.Sub(Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Subtract the vector
  example: []
  syntax:
    content: public void Sub(Vec3 v)
    parameters:
    - id: v
      type: Genesis.Math.Vec3
      description: ''
    content.vb: Public Sub [Sub](v As Vec3)
  overload: Genesis.Math.Vec3.Sub*
- uid: Genesis.Math.Vec3.Set(System.Single,System.Single,System.Single)
  commentId: M:Genesis.Math.Vec3.Set(System.Single,System.Single,System.Single)
  id: Set(System.Single,System.Single,System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Set(float, float, float)
  nameWithType: Vec3.Set(float, float, float)
  fullName: Genesis.Math.Vec3.Set(float, float, float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Sets the value for the vector
  example: []
  syntax:
    content: public void Set(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
      description: ''
    - id: y
      type: System.Single
      description: ''
    - id: z
      type: System.Single
      description: ''
    content.vb: Public Sub [Set](x As Single, y As Single, z As Single)
  overload: Genesis.Math.Vec3.Set*
  nameWithType.vb: Vec3.Set(Single, Single, Single)
  fullName.vb: Genesis.Math.Vec3.Set(Single, Single, Single)
  name.vb: Set(Single, Single, Single)
- uid: Genesis.Math.Vec3.Set(Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Set(Genesis.Math.Vec3)
  id: Set(Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Set(Vec3)
  nameWithType: Vec3.Set(Vec3)
  fullName: Genesis.Math.Vec3.Set(Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Sets the value for the vector
  example: []
  syntax:
    content: public void Set(Vec3 vec)
    parameters:
    - id: vec
      type: Genesis.Math.Vec3
      description: ''
    content.vb: Public Sub [Set](vec As Vec3)
  overload: Genesis.Math.Vec3.Set*
- uid: Genesis.Math.Vec3.Forward(Genesis.Math.Vec3,System.Single)
  commentId: M:Genesis.Math.Vec3.Forward(Genesis.Math.Vec3,System.Single)
  id: Forward(Genesis.Math.Vec3,System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Forward(Vec3, float)
  nameWithType: Vec3.Forward(Vec3, float)
  fullName: Genesis.Math.Vec3.Forward(Genesis.Math.Vec3, float)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns the forward vector
  example: []
  syntax:
    content: public Vec3 Forward(Vec3 rotation, float dist)
    parameters:
    - id: rotation
      type: Genesis.Math.Vec3
      description: ''
    - id: dist
      type: System.Single
      description: ''
    return:
      type: Genesis.Math.Vec3
      description: ''
    content.vb: Public Function Forward(rotation As Vec3, dist As Single) As Vec3
  overload: Genesis.Math.Vec3.Forward*
  nameWithType.vb: Vec3.Forward(Vec3, Single)
  fullName.vb: Genesis.Math.Vec3.Forward(Genesis.Math.Vec3, Single)
  name.vb: Forward(Vec3, Single)
- uid: Genesis.Math.Vec3.op_Addition(Genesis.Math.Vec3,Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.op_Addition(Genesis.Math.Vec3,Genesis.Math.Vec3)
  id: op_Addition(Genesis.Math.Vec3,Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: operator +(Vec3, Vec3)
  nameWithType: Vec3.operator +(Vec3, Vec3)
  fullName: Genesis.Math.Vec3.operator +(Genesis.Math.Vec3, Genesis.Math.Vec3)
  type: Operator
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Add operator for vector addition.
  example: []
  syntax:
    content: public static Vec3 operator +(Vec3 vec1, Vec3 vec2)
    parameters:
    - id: vec1
      type: Genesis.Math.Vec3
      description: The first vector.
    - id: vec2
      type: Genesis.Math.Vec3
      description: The second vector.
    return:
      type: Genesis.Math.Vec3
      description: A new Vec3 instance representing the result of vector addition.
    content.vb: Public Shared Operator +(vec1 As Vec3, vec2 As Vec3) As Vec3
  overload: Genesis.Math.Vec3.op_Addition*
  nameWithType.vb: Vec3.+(Vec3, Vec3)
  fullName.vb: Genesis.Math.Vec3.+(Genesis.Math.Vec3, Genesis.Math.Vec3)
  name.vb: +(Vec3, Vec3)
- uid: Genesis.Math.Vec3.op_Multiply(Genesis.Math.Vec3,Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.op_Multiply(Genesis.Math.Vec3,Genesis.Math.Vec3)
  id: op_Multiply(Genesis.Math.Vec3,Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: operator *(Vec3, Vec3)
  nameWithType: Vec3.operator *(Vec3, Vec3)
  fullName: Genesis.Math.Vec3.operator *(Genesis.Math.Vec3, Genesis.Math.Vec3)
  type: Operator
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Add operator for vector multiplication.
  example: []
  syntax:
    content: public static Vec3 operator *(Vec3 vec1, Vec3 vec2)
    parameters:
    - id: vec1
      type: Genesis.Math.Vec3
      description: The first vector.
    - id: vec2
      type: Genesis.Math.Vec3
      description: The second vector.
    return:
      type: Genesis.Math.Vec3
      description: A new Vec3 instance representing the result of vector multiplication.
    content.vb: Public Shared Operator *(vec1 As Vec3, vec2 As Vec3) As Vec3
  overload: Genesis.Math.Vec3.op_Multiply*
  nameWithType.vb: Vec3.*(Vec3, Vec3)
  fullName.vb: Genesis.Math.Vec3.*(Genesis.Math.Vec3, Genesis.Math.Vec3)
  name.vb: '*(Vec3, Vec3)'
- uid: Genesis.Math.Vec3.op_Division(Genesis.Math.Vec3,Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.op_Division(Genesis.Math.Vec3,Genesis.Math.Vec3)
  id: op_Division(Genesis.Math.Vec3,Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: operator /(Vec3, Vec3)
  nameWithType: Vec3.operator /(Vec3, Vec3)
  fullName: Genesis.Math.Vec3.operator /(Genesis.Math.Vec3, Genesis.Math.Vec3)
  type: Operator
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Add operator for vector substraction.
  example: []
  syntax:
    content: public static Vec3 operator /(Vec3 vec1, Vec3 vec2)
    parameters:
    - id: vec1
      type: Genesis.Math.Vec3
      description: The first vector.
    - id: vec2
      type: Genesis.Math.Vec3
      description: The second vector.
    return:
      type: Genesis.Math.Vec3
      description: A new Vec3 instance representing the result of vector substraction.
    content.vb: Public Shared Operator /(vec1 As Vec3, vec2 As Vec3) As Vec3
  overload: Genesis.Math.Vec3.op_Division*
  nameWithType.vb: Vec3./(Vec3, Vec3)
  fullName.vb: Genesis.Math.Vec3./(Genesis.Math.Vec3, Genesis.Math.Vec3)
  name.vb: /(Vec3, Vec3)
- uid: Genesis.Math.Vec3.op_Multiply(Genesis.Math.Vec3,System.Single)
  commentId: M:Genesis.Math.Vec3.op_Multiply(Genesis.Math.Vec3,System.Single)
  id: op_Multiply(Genesis.Math.Vec3,System.Single)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: operator *(Vec3, float)
  nameWithType: Vec3.operator *(Vec3, float)
  fullName: Genesis.Math.Vec3.operator *(Genesis.Math.Vec3, float)
  type: Operator
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Multiplies the vector by a scalar value.
  example: []
  syntax:
    content: public static Vec3 operator *(Vec3 vec, float value)
    parameters:
    - id: vec
      type: Genesis.Math.Vec3
      description: The vector to multiply.
    - id: value
      type: System.Single
      description: The scalar value.
    return:
      type: Genesis.Math.Vec3
      description: A new Vec3 instance representing the result of the multiplication.
    content.vb: Public Shared Operator *(vec As Vec3, value As Single) As Vec3
  overload: Genesis.Math.Vec3.op_Multiply*
  nameWithType.vb: Vec3.*(Vec3, Single)
  fullName.vb: Genesis.Math.Vec3.*(Genesis.Math.Vec3, Single)
  name.vb: '*(Vec3, Single)'
- uid: Genesis.Math.Vec3.op_Subtraction(Genesis.Math.Vec3,Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.op_Subtraction(Genesis.Math.Vec3,Genesis.Math.Vec3)
  id: op_Subtraction(Genesis.Math.Vec3,Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: operator -(Vec3, Vec3)
  nameWithType: Vec3.operator -(Vec3, Vec3)
  fullName: Genesis.Math.Vec3.operator -(Genesis.Math.Vec3, Genesis.Math.Vec3)
  type: Operator
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Subtracts one vector from another.
  example: []
  syntax:
    content: public static Vec3 operator -(Vec3 vec1, Vec3 vec2)
    parameters:
    - id: vec1
      type: Genesis.Math.Vec3
      description: The first vector.
    - id: vec2
      type: Genesis.Math.Vec3
      description: The second vector to subtract.
    return:
      type: Genesis.Math.Vec3
      description: A new Vec3 instance representing the result of the subtraction.
    content.vb: Public Shared Operator -(vec1 As Vec3, vec2 As Vec3) As Vec3
  overload: Genesis.Math.Vec3.op_Subtraction*
  nameWithType.vb: Vec3.-(Vec3, Vec3)
  fullName.vb: Genesis.Math.Vec3.-(Genesis.Math.Vec3, Genesis.Math.Vec3)
  name.vb: -(Vec3, Vec3)
- uid: Genesis.Math.Vec3.Cross(Genesis.Math.Vec3,Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Cross(Genesis.Math.Vec3,Genesis.Math.Vec3)
  id: Cross(Genesis.Math.Vec3,Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Cross(Vec3, Vec3)
  nameWithType: Vec3.Cross(Vec3, Vec3)
  fullName: Genesis.Math.Vec3.Cross(Genesis.Math.Vec3, Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Calculates the cross product of two vectors.
  example: []
  syntax:
    content: public static Vec3 Cross(Vec3 vec1, Vec3 vec2)
    parameters:
    - id: vec1
      type: Genesis.Math.Vec3
      description: The first vector.
    - id: vec2
      type: Genesis.Math.Vec3
      description: The second vector.
    return:
      type: Genesis.Math.Vec3
      description: A new Vec3 instance representing the cross product of the two vectors.
    content.vb: Public Shared Function Cross(vec1 As Vec3, vec2 As Vec3) As Vec3
  overload: Genesis.Math.Vec3.Cross*
- uid: Genesis.Math.Vec3.Dot(Genesis.Math.Vec3,Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Dot(Genesis.Math.Vec3,Genesis.Math.Vec3)
  id: Dot(Genesis.Math.Vec3,Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Dot(Vec3, Vec3)
  nameWithType: Vec3.Dot(Vec3, Vec3)
  fullName: Genesis.Math.Vec3.Dot(Genesis.Math.Vec3, Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Calculates the dot product of two vectors.
  example: []
  syntax:
    content: public static float Dot(Vec3 vec1, Vec3 vec2)
    parameters:
    - id: vec1
      type: Genesis.Math.Vec3
      description: The first vector.
    - id: vec2
      type: Genesis.Math.Vec3
      description: The second vector.
    return:
      type: System.Single
      description: The dot product of the two vectors.
    content.vb: Public Shared Function Dot(vec1 As Vec3, vec2 As Vec3) As Single
  overload: Genesis.Math.Vec3.Dot*
- uid: Genesis.Math.Vec3.Normalize
  commentId: M:Genesis.Math.Vec3.Normalize
  id: Normalize
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vec3.Normalize()
  fullName: Genesis.Math.Vec3.Normalize()
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Normalizes the vector.
  example: []
  syntax:
    content: public Vec3 Normalize()
    return:
      type: Genesis.Math.Vec3
      description: A normalized Vec3 instance.
    content.vb: Public Function Normalize() As Vec3
  overload: Genesis.Math.Vec3.Normalize*
- uid: Genesis.Math.Vec3.Normalized(Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Normalized(Genesis.Math.Vec3)
  id: Normalized(Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Normalized(Vec3)
  nameWithType: Vec3.Normalized(Vec3)
  fullName: Genesis.Math.Vec3.Normalized(Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns a normalized version of the input vector.
  example: []
  syntax:
    content: public static Vec3 Normalized(Vec3 vec)
    parameters:
    - id: vec
      type: Genesis.Math.Vec3
      description: The vector to normalize.
    return:
      type: Genesis.Math.Vec3
      description: A normalized Vec3 instance.
    content.vb: Public Shared Function Normalized(vec As Vec3) As Vec3
  overload: Genesis.Math.Vec3.Normalized*
- uid: Genesis.Math.Vec3.Ceiling(Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Ceiling(Genesis.Math.Vec3)
  id: Ceiling(Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Ceiling(Vec3)
  nameWithType: Vec3.Ceiling(Vec3)
  fullName: Genesis.Math.Vec3.Ceiling(Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns a new Vec3 object where each component is the smallest integer greater than or equal to the corresponding component of the input Vec3.
  example: []
  syntax:
    content: public static Vec3 Ceiling(Vec3 vec)
    parameters:
    - id: vec
      type: Genesis.Math.Vec3
      description: The input Vec3 to be processed.
    return:
      type: Genesis.Math.Vec3
      description: A new Vec3 with each component rounded up to the nearest integer.
    content.vb: Public Shared Function Ceiling(vec As Vec3) As Vec3
  overload: Genesis.Math.Vec3.Ceiling*
- uid: Genesis.Math.Vec3.Floor(Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Floor(Genesis.Math.Vec3)
  id: Floor(Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Floor(Vec3)
  nameWithType: Vec3.Floor(Vec3)
  fullName: Genesis.Math.Vec3.Floor(Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns a new Vec3 object where each component is rounded down to the nearest integer
  example: []
  syntax:
    content: public static Vec3 Floor(Vec3 vec)
    parameters:
    - id: vec
      type: Genesis.Math.Vec3
      description: The input Vec3 to be processed.
    return:
      type: Genesis.Math.Vec3
      description: A new Vec3 with each component rounded down to the nearest integer.
    content.vb: Public Shared Function Floor(vec As Vec3) As Vec3
  overload: Genesis.Math.Vec3.Floor*
- uid: Genesis.Math.Vec3.Round(Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Round(Genesis.Math.Vec3)
  id: Round(Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Round(Vec3)
  nameWithType: Vec3.Round(Vec3)
  fullName: Genesis.Math.Vec3.Round(Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns a new Vec3 object where each component is rounded to the nearest integer
  example: []
  syntax:
    content: public static Vec3 Round(Vec3 vec)
    parameters:
    - id: vec
      type: Genesis.Math.Vec3
      description: The input Vec3 to be processed.
    return:
      type: Genesis.Math.Vec3
      description: A new Vec3 with each component rounded to the nearest integer.
    content.vb: Public Shared Function Round(vec As Vec3) As Vec3
  overload: Genesis.Math.Vec3.Round*
- uid: Genesis.Math.Vec3.Half(Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Half(Genesis.Math.Vec3)
  id: Half(Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Half(Vec3)
  nameWithType: Vec3.Half(Vec3)
  fullName: Genesis.Math.Vec3.Half(Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns a new <xref href="Genesis.Math.Vec3" data-throw-if-not-resolved="false"></xref> instance with each component halved.
  example: []
  syntax:
    content: public static Vec3 Half(Vec3 vec)
    parameters:
    - id: vec
      type: Genesis.Math.Vec3
      description: The <xref href="Genesis.Math.Vec3" data-throw-if-not-resolved="false"></xref> instance to halve.
    return:
      type: Genesis.Math.Vec3
      description: A new <xref href="Genesis.Math.Vec3" data-throw-if-not-resolved="false"></xref> instance with each component halved.
    content.vb: Public Shared Function Half(vec As Vec3) As Vec3
  overload: Genesis.Math.Vec3.Half*
- uid: Genesis.Math.Vec3.Half
  commentId: M:Genesis.Math.Vec3.Half
  id: Half
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Half()
  nameWithType: Vec3.Half()
  fullName: Genesis.Math.Vec3.Half()
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns a new <xref href="Genesis.Math.Vec3" data-throw-if-not-resolved="false"></xref> instance with the components of this instance halved.
  example: []
  syntax:
    content: public Vec3 Half()
    return:
      type: Genesis.Math.Vec3
      description: A new <xref href="Genesis.Math.Vec3" data-throw-if-not-resolved="false"></xref> instance with the components halved.
    content.vb: Public Function Half() As Vec3
  overload: Genesis.Math.Vec3.Half*
- uid: Genesis.Math.Vec3.Random(Genesis.Math.Vec3,Genesis.Math.Vec3,System.Int32)
  commentId: M:Genesis.Math.Vec3.Random(Genesis.Math.Vec3,Genesis.Math.Vec3,System.Int32)
  id: Random(Genesis.Math.Vec3,Genesis.Math.Vec3,System.Int32)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Random(Vec3, Vec3, int)
  nameWithType: Vec3.Random(Vec3, Vec3, int)
  fullName: Genesis.Math.Vec3.Random(Genesis.Math.Vec3, Genesis.Math.Vec3, int)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Generates an rendom vector from min an max value with the given seed
  example: []
  syntax:
    content: public static Vec3 Random(Vec3 min, Vec3 max, int seed)
    parameters:
    - id: min
      type: Genesis.Math.Vec3
      description: The min vector
    - id: max
      type: Genesis.Math.Vec3
      description: The max vector
    - id: seed
      type: System.Int32
      description: The seed
    return:
      type: Genesis.Math.Vec3
      description: ''
    content.vb: Public Shared Function Random(min As Vec3, max As Vec3, seed As Integer) As Vec3
  overload: Genesis.Math.Vec3.Random*
  nameWithType.vb: Vec3.Random(Vec3, Vec3, Integer)
  fullName.vb: Genesis.Math.Vec3.Random(Genesis.Math.Vec3, Genesis.Math.Vec3, Integer)
  name.vb: Random(Vec3, Vec3, Integer)
- uid: Genesis.Math.Vec3.Random(Genesis.Math.Vec3,Genesis.Math.Vec3)
  commentId: M:Genesis.Math.Vec3.Random(Genesis.Math.Vec3,Genesis.Math.Vec3)
  id: Random(Genesis.Math.Vec3,Genesis.Math.Vec3)
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Random(Vec3, Vec3)
  nameWithType: Vec3.Random(Vec3, Vec3)
  fullName: Genesis.Math.Vec3.Random(Genesis.Math.Vec3, Genesis.Math.Vec3)
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Generates an rendom vector from min an max value
  example: []
  syntax:
    content: public static Vec3 Random(Vec3 min, Vec3 max)
    parameters:
    - id: min
      type: Genesis.Math.Vec3
      description: The min vector
    - id: max
      type: Genesis.Math.Vec3
      description: The max vector
    return:
      type: Genesis.Math.Vec3
      description: ''
    content.vb: Public Shared Function Random(min As Vec3, max As Vec3) As Vec3
  overload: Genesis.Math.Vec3.Random*
- uid: Genesis.Math.Vec3.ToString
  commentId: M:Genesis.Math.Vec3.ToString
  id: ToString
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vec3.ToString()
  fullName: Genesis.Math.Vec3.ToString()
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Returns a string representation of the vector.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string containing the X, Y, and Z coordinates of the vector.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Genesis.Math.Vec3.ToString*
- uid: Genesis.Math.Vec3.ToGlmVec3
  commentId: M:Genesis.Math.Vec3.ToGlmVec3
  id: ToGlmVec3
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: ToGlmVec3()
  nameWithType: Vec3.ToGlmVec3()
  fullName: Genesis.Math.Vec3.ToGlmVec3()
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Converts the vector to its GLM equivalent.
  example: []
  syntax:
    content: public vec3 ToGlmVec3()
    return:
      type: GlmSharp.vec3
      description: A GLM vec3 instance representing the same vector.
    content.vb: Public Function ToGlmVec3() As vec3
  overload: Genesis.Math.Vec3.ToGlmVec3*
- uid: Genesis.Math.Vec3.ToBulletVec3
  commentId: M:Genesis.Math.Vec3.ToBulletVec3
  id: ToBulletVec3
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: ToBulletVec3()
  nameWithType: Vec3.ToBulletVec3()
  fullName: Genesis.Math.Vec3.ToBulletVec3()
  type: Method
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Converts the vector to its BulletSharp equivalent.
  example: []
  syntax:
    content: public Vector3 ToBulletVec3()
    return:
      type: BulletSharp.Math.Vector3
      description: A BulletSharp Vector3 instance representing the same vector.
    content.vb: Public Function ToBulletVec3() As Vector3
  overload: Genesis.Math.Vec3.ToBulletVec3*
- uid: Genesis.Math.Vec3.X
  commentId: P:Genesis.Math.Vec3.X
  id: X
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vec3.X
  fullName: Genesis.Math.Vec3.X
  type: Property
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Gets or sets the X-coordinate of the vector.
  example: []
  syntax:
    content: public float X { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property X As Single
  overload: Genesis.Math.Vec3.X*
- uid: Genesis.Math.Vec3.Y
  commentId: P:Genesis.Math.Vec3.Y
  id: Y
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vec3.Y
  fullName: Genesis.Math.Vec3.Y
  type: Property
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Gets or sets the Y-coordinate of the vector.
  example: []
  syntax:
    content: public float Y { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Y As Single
  overload: Genesis.Math.Vec3.Y*
- uid: Genesis.Math.Vec3.Z
  commentId: P:Genesis.Math.Vec3.Z
  id: Z
  parent: Genesis.Math.Vec3
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vec3.Z
  fullName: Genesis.Math.Vec3.Z
  type: Property
  assemblies:
  - Genesis
  namespace: Genesis.Math
  summary: Gets or sets the Z-coordinate of the vector.
  example: []
  syntax:
    content: public float Z { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Z As Single
  overload: Genesis.Math.Vec3.Z*
references:
- uid: Genesis.Math
  commentId: N:Genesis.Math
  isExternal: true
  href: Genesis.html
  name: Genesis.Math
  nameWithType: Genesis.Math
  fullName: Genesis.Math
  spec.csharp:
  - uid: Genesis
    name: Genesis
    isExternal: true
    href: Genesis.html
  - name: .
  - uid: Genesis.Math
    name: Math
    isExternal: true
    href: Genesis.Math.html
  spec.vb:
  - uid: Genesis
    name: Genesis
    isExternal: true
    href: Genesis.html
  - name: .
  - uid: Genesis.Math
    name: Math
    isExternal: true
    href: Genesis.Math.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Genesis.Math.Vec3.#ctor*
  commentId: Overload:Genesis.Math.Vec3.#ctor
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3__ctor_System_Single_System_Single_System_Single_
  name: Vec3
  nameWithType: Vec3.Vec3
  fullName: Genesis.Math.Vec3.Vec3
  nameWithType.vb: Vec3.New
  fullName.vb: Genesis.Math.Vec3.New
  name.vb: New
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Drawing.Size
  commentId: T:System.Drawing.Size
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.size
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: System.Drawing.SizeF
  commentId: T:System.Drawing.SizeF
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.sizef
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Point
  commentId: T:System.Drawing.Point
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.point
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.PointF
  commentId: T:System.Drawing.PointF
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.pointf
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: GlmSharp.vec3
  commentId: T:GlmSharp.vec3
  parent: GlmSharp
  isExternal: true
  name: vec3
  nameWithType: vec3
  fullName: GlmSharp.vec3
- uid: GlmSharp
  commentId: N:GlmSharp
  isExternal: true
  name: GlmSharp
  nameWithType: GlmSharp
  fullName: GlmSharp
- uid: Genesis.Math.Vec3.Zero*
  commentId: Overload:Genesis.Math.Vec3.Zero
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Zero
  name: Zero
  nameWithType: Vec3.Zero
  fullName: Genesis.Math.Vec3.Zero
- uid: Genesis.Math.Vec3
  commentId: T:Genesis.Math.Vec3
  parent: Genesis.Math
  isExternal: true
  href: Genesis.Math.Vec3.html
  name: Vec3
  nameWithType: Vec3
  fullName: Genesis.Math.Vec3
- uid: Genesis.Math.Vec3.Degres*
  commentId: Overload:Genesis.Math.Vec3.Degres
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Degres_System_Single_System_Single_
  name: Degres
  nameWithType: Vec3.Degres
  fullName: Genesis.Math.Vec3.Degres
- uid: Genesis.Math.Vec3.Towards*
  commentId: Overload:Genesis.Math.Vec3.Towards
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Towards_System_Single_System_Single_
  name: Towards
  nameWithType: Vec3.Towards
  fullName: Genesis.Math.Vec3.Towards
- uid: Genesis.Math.Vec3.Towards2D*
  commentId: Overload:Genesis.Math.Vec3.Towards2D
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Towards2D_System_Single_Genesis_Math_Vec3_System_Single_
  name: Towards2D
  nameWithType: Vec3.Towards2D
  fullName: Genesis.Math.Vec3.Towards2D
- uid: Genesis.Math.Vec3.Towards3D*
  commentId: Overload:Genesis.Math.Vec3.Towards3D
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Towards3D_Genesis_Math_Vec3_Genesis_Math_Vec3_System_Single_
  name: Towards3D
  nameWithType: Vec3.Towards3D
  fullName: Genesis.Math.Vec3.Towards3D
- uid: Genesis.Math.Vec3.Distance*
  commentId: Overload:Genesis.Math.Vec3.Distance
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Distance_Genesis_Math_Vec3_
  name: Distance
  nameWithType: Vec3.Distance
  fullName: Genesis.Math.Vec3.Distance
- uid: Genesis.Math.Vec3.Add*
  commentId: Overload:Genesis.Math.Vec3.Add
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Add_Genesis_Math_Vec3_
  name: Add
  nameWithType: Vec3.Add
  fullName: Genesis.Math.Vec3.Add
- uid: Genesis.Math.Vec3.AddX*
  commentId: Overload:Genesis.Math.Vec3.AddX
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_AddX_System_Single_
  name: AddX
  nameWithType: Vec3.AddX
  fullName: Genesis.Math.Vec3.AddX
- uid: Genesis.Math.Vec3.AddY*
  commentId: Overload:Genesis.Math.Vec3.AddY
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_AddY_System_Single_
  name: AddY
  nameWithType: Vec3.AddY
  fullName: Genesis.Math.Vec3.AddY
- uid: Genesis.Math.Vec3.AddZ*
  commentId: Overload:Genesis.Math.Vec3.AddZ
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_AddZ_System_Single_
  name: AddZ
  nameWithType: Vec3.AddZ
  fullName: Genesis.Math.Vec3.AddZ
- uid: Genesis.Math.Vec3.Sub*
  commentId: Overload:Genesis.Math.Vec3.Sub
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Sub_Genesis_Math_Vec3_
  name: Sub
  nameWithType: Vec3.Sub
  fullName: Genesis.Math.Vec3.Sub
- uid: Genesis.Math.Vec3.Set*
  commentId: Overload:Genesis.Math.Vec3.Set
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Set_System_Single_System_Single_System_Single_
  name: Set
  nameWithType: Vec3.Set
  fullName: Genesis.Math.Vec3.Set
- uid: Genesis.Math.Vec3.Forward*
  commentId: Overload:Genesis.Math.Vec3.Forward
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Forward_Genesis_Math_Vec3_System_Single_
  name: Forward
  nameWithType: Vec3.Forward
  fullName: Genesis.Math.Vec3.Forward
- uid: Genesis.Math.Vec3.op_Addition*
  commentId: Overload:Genesis.Math.Vec3.op_Addition
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_op_Addition_Genesis_Math_Vec3_Genesis_Math_Vec3_
  name: operator +
  nameWithType: Vec3.operator +
  fullName: Genesis.Math.Vec3.operator +
  nameWithType.vb: Vec3.+
  fullName.vb: Genesis.Math.Vec3.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Genesis.Math.Vec3.op_Addition*
    name: +
    isExternal: true
    href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_op_Addition_Genesis_Math_Vec3_Genesis_Math_Vec3_
- uid: Genesis.Math.Vec3.op_Multiply*
  commentId: Overload:Genesis.Math.Vec3.op_Multiply
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_op_Multiply_Genesis_Math_Vec3_Genesis_Math_Vec3_
  name: operator *
  nameWithType: Vec3.operator *
  fullName: Genesis.Math.Vec3.operator *
  nameWithType.vb: Vec3.*
  fullName.vb: Genesis.Math.Vec3.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Genesis.Math.Vec3.op_Multiply*
    name: '*'
    isExternal: true
    href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_op_Multiply_Genesis_Math_Vec3_Genesis_Math_Vec3_
- uid: Genesis.Math.Vec3.op_Division*
  commentId: Overload:Genesis.Math.Vec3.op_Division
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_op_Division_Genesis_Math_Vec3_Genesis_Math_Vec3_
  name: operator /
  nameWithType: Vec3.operator /
  fullName: Genesis.Math.Vec3.operator /
  nameWithType.vb: Vec3./
  fullName.vb: Genesis.Math.Vec3./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Genesis.Math.Vec3.op_Division*
    name: /
    isExternal: true
    href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_op_Division_Genesis_Math_Vec3_Genesis_Math_Vec3_
- uid: Genesis.Math.Vec3.op_Subtraction*
  commentId: Overload:Genesis.Math.Vec3.op_Subtraction
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_op_Subtraction_Genesis_Math_Vec3_Genesis_Math_Vec3_
  name: operator -
  nameWithType: Vec3.operator -
  fullName: Genesis.Math.Vec3.operator -
  nameWithType.vb: Vec3.-
  fullName.vb: Genesis.Math.Vec3.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Genesis.Math.Vec3.op_Subtraction*
    name: '-'
    isExternal: true
    href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_op_Subtraction_Genesis_Math_Vec3_Genesis_Math_Vec3_
- uid: Genesis.Math.Vec3.Cross*
  commentId: Overload:Genesis.Math.Vec3.Cross
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Cross_Genesis_Math_Vec3_Genesis_Math_Vec3_
  name: Cross
  nameWithType: Vec3.Cross
  fullName: Genesis.Math.Vec3.Cross
- uid: Genesis.Math.Vec3.Dot*
  commentId: Overload:Genesis.Math.Vec3.Dot
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Dot_Genesis_Math_Vec3_Genesis_Math_Vec3_
  name: Dot
  nameWithType: Vec3.Dot
  fullName: Genesis.Math.Vec3.Dot
- uid: Genesis.Math.Vec3.Normalize*
  commentId: Overload:Genesis.Math.Vec3.Normalize
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Normalize
  name: Normalize
  nameWithType: Vec3.Normalize
  fullName: Genesis.Math.Vec3.Normalize
- uid: Genesis.Math.Vec3.Normalized*
  commentId: Overload:Genesis.Math.Vec3.Normalized
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Normalized_Genesis_Math_Vec3_
  name: Normalized
  nameWithType: Vec3.Normalized
  fullName: Genesis.Math.Vec3.Normalized
- uid: Genesis.Math.Vec3.Ceiling*
  commentId: Overload:Genesis.Math.Vec3.Ceiling
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Ceiling_Genesis_Math_Vec3_
  name: Ceiling
  nameWithType: Vec3.Ceiling
  fullName: Genesis.Math.Vec3.Ceiling
- uid: Genesis.Math.Vec3.Floor*
  commentId: Overload:Genesis.Math.Vec3.Floor
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Floor_Genesis_Math_Vec3_
  name: Floor
  nameWithType: Vec3.Floor
  fullName: Genesis.Math.Vec3.Floor
- uid: Genesis.Math.Vec3.Round*
  commentId: Overload:Genesis.Math.Vec3.Round
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Round_Genesis_Math_Vec3_
  name: Round
  nameWithType: Vec3.Round
  fullName: Genesis.Math.Vec3.Round
- uid: Genesis.Math.Vec3.Half*
  commentId: Overload:Genesis.Math.Vec3.Half
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Half_Genesis_Math_Vec3_
  name: Half
  nameWithType: Vec3.Half
  fullName: Genesis.Math.Vec3.Half
- uid: Genesis.Math.Vec3.Random*
  commentId: Overload:Genesis.Math.Vec3.Random
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Random_Genesis_Math_Vec3_Genesis_Math_Vec3_System_Int32_
  name: Random
  nameWithType: Vec3.Random
  fullName: Genesis.Math.Vec3.Random
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Genesis.Math.Vec3.ToString*
  commentId: Overload:Genesis.Math.Vec3.ToString
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_ToString
  name: ToString
  nameWithType: Vec3.ToString
  fullName: Genesis.Math.Vec3.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Genesis.Math.Vec3.ToGlmVec3*
  commentId: Overload:Genesis.Math.Vec3.ToGlmVec3
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_ToGlmVec3
  name: ToGlmVec3
  nameWithType: Vec3.ToGlmVec3
  fullName: Genesis.Math.Vec3.ToGlmVec3
- uid: Genesis.Math.Vec3.ToBulletVec3*
  commentId: Overload:Genesis.Math.Vec3.ToBulletVec3
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_ToBulletVec3
  name: ToBulletVec3
  nameWithType: Vec3.ToBulletVec3
  fullName: Genesis.Math.Vec3.ToBulletVec3
- uid: BulletSharp.Math.Vector3
  commentId: T:BulletSharp.Math.Vector3
  parent: BulletSharp.Math
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: BulletSharp.Math.Vector3
- uid: BulletSharp.Math
  commentId: N:BulletSharp.Math
  isExternal: true
  name: BulletSharp.Math
  nameWithType: BulletSharp.Math
  fullName: BulletSharp.Math
  spec.csharp:
  - uid: BulletSharp
    name: BulletSharp
    isExternal: true
  - name: .
  - uid: BulletSharp.Math
    name: Math
    isExternal: true
  spec.vb:
  - uid: BulletSharp
    name: BulletSharp
    isExternal: true
  - name: .
  - uid: BulletSharp.Math
    name: Math
    isExternal: true
- uid: Genesis.Math.Vec3.X*
  commentId: Overload:Genesis.Math.Vec3.X
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_X
  name: X
  nameWithType: Vec3.X
  fullName: Genesis.Math.Vec3.X
- uid: Genesis.Math.Vec3.Y*
  commentId: Overload:Genesis.Math.Vec3.Y
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Y
  name: Y
  nameWithType: Vec3.Y
  fullName: Genesis.Math.Vec3.Y
- uid: Genesis.Math.Vec3.Z*
  commentId: Overload:Genesis.Math.Vec3.Z
  isExternal: true
  href: Genesis.Math.Vec3.html#Genesis_Math_Vec3_Z
  name: Z
  nameWithType: Vec3.Z
  fullName: Genesis.Math.Vec3.Z
